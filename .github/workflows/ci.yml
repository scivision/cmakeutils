name: ci

env:
  cmake_version: '3.23.2'
  ninja_version: '1.11.0'
  HOMEBREW_NO_INSTALL_CLEANUP: 1

on:
  push:
    paths:
      - "**.cmake"
      - "**.py"
      - "**/CMakeLists.txt"
      - ".github/workflows/ci.yml"


jobs:

  unix:

    strategy:
      matrix:
        cfg: [
          {os: ubuntu-latest, fc: gfortran},
          {os: macos-latest, fc: gfortran-11}
          ]

    env:
      FC: ${{ matrix.cfg.fc }}

    runs-on: ${{ matrix.cfg.os }}

    steps:
    - uses: actions/checkout@v2

    - name: Install Ninja
      run: cmake -S install_ninja -B ${{ runner.temp }}/ninja -Dversion="${{ env.ninja_version }}" -DCMAKE_INSTALL_PREFIX:PATH=${{ runner.temp }}

    - name: Ninja path (unix)
      run: echo "${{ runner.temp }}/ninja" >> $GITHUB_PATH

    - name: Install CMake
      run: cmake -S install_cmake -B ${{ runner.temp }}/cmake -Dversion="${{ env.cmake_version }}" -DCMAKE_INSTALL_PREFIX:PATH=${{ runner.temp }}

    - name: CMake path (Linux)
      if: runner.os == 'linux'
      run: echo "${{ runner.temp }}/cmake-${{ env.cmake_version }}-linux-x86_64/bin" >> $GITHUB_PATH

    - name: CMake path (MacOS)
      if: runner.os == 'macos'
      run: echo "${{ runner.temp }}/cmake-${{ env.cmake_version }}-macos-universal/bin" >> $GITHUB_PATH

    - run: cmake --version

    - run: cmake -G Ninja -B build --install-prefix=${HOME}
    - run: cmake --build build
    - run: ctest --test-dir build --preset default


  windows:
    runs-on: windows-latest

    steps:
    - uses: msys2/setup-msys2@v2
      with:
        update: true
        install: >-
          mingw-w64-x86_64-gcc-fortran

    - name: Put MSYS2_MinGW64 on PATH
      run: echo "${{ runner.temp }}/msys64/mingw64/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - uses: actions/checkout@v2

    - name: Install Ninja
      run: cmake -S install_ninja -B ${{ runner.temp }}/ninja -Dversion="${{ env.ninja_version }}" -DCMAKE_INSTALL_PREFIX:PATH=${{ runner.temp }}

    - name: Ninja path (Windows)
      run: echo "${{ runner.temp }}/ninja" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - name: Install CMake
      run: cmake -S install_cmake -B ${{ runner.temp }}/cmake -Dversion="${{ env.cmake_version }}" -DCMAKE_INSTALL_PREFIX:PATH=${{ runner.temp }}

    - name: CMake path (Windows)
      run: echo "${{ runner.temp }}/cmake-${{ env.cmake_version }}-windows-x86_64/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - run: cmake --version

    - run: cmake -G Ninja -B build --install-prefix=${HOME}
    - run: cmake --build build
    - run: ctest --test-dir build --preset default


  python:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - run: pip install .[lint]
    - run: flake8
    - run: mypy
