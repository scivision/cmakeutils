name: ci

on:
  push:
    paths:
      - "**.cmake"
      - "**/CMakeLists.txt"
      - ".github/workflows/ci.yml"


jobs:

  core:

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:

    - uses: msys2/setup-msys2@v2
      if: runner.os == 'Windows'
      with:
        update: true
        install: >-
          mingw-w64-x86_64-gcc-fortran

    - name: Put MSYS2_MinGW64 on PATH
      if: runner.os == 'Windows'
      run: echo "${{ runner.temp }}/msys64/mingw64/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - uses: actions/checkout@v4

    - name: Install Ninja
      run: cmake -Dprefix:PATH=~/ninja -P scripts/install_ninja.cmake

    - name: Install CMake
      run: cmake -Dprefix:PATH=~/cmake -P scripts/install_cmake.cmake

    - name: CMake path (linux)
      if: runner.os == 'Linux'
      run: echo "$HOME/ninja:$HOME/cmake/bin" >> $GITHUB_PATH

    - name: CMake path (macOS)
      if: runner.os == 'macOS'
      run: echo "$HOME/ninja:$HOME/cmake/CMake.app/Contents/bin" >> $GITHUB_PATH

    - name: CMake path (Windows)
      if: runner.os == 'Windows'
      run: echo "$env:userprofile/ninja;$env:userprofile/cmake/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - name: Gfortran name (macOS)
      if: runner.os == 'macOS'
      run: echo "FC=gfortran-13" >> $GITHUB_PATH

    - run: echo $PATH

    - run: cmake --version
    - run: ninja --version

    - run: cmake -G Ninja -B build
    - run: cmake --build build
    - run: ctest --test-dir build --preset default
