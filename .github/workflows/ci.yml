name: ci

env:
  cmake_version: '3.26.5'
  ninja_version: '1.11.1'
  HOMEBREW_NO_INSTALL_CLEANUP: 1

on:
  push:
    paths:
      - "**.cmake"
      - "**/CMakeLists.txt"
      - ".github/workflows/ci.yml"


jobs:

  core:

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:

    - uses: msys2/setup-msys2@v2
      if: runner.os == 'Windows'
      with:
        update: true
        install: >-
          mingw-w64-x86_64-gcc-fortran

    - name: Put MSYS2_MinGW64 on PATH
      if: runner.os == 'Windows'
      run: echo "${{ runner.temp }}/msys64/mingw64/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - name: Install Gfortran (macOS)
      if: runner.os == 'macOS'
      run: brew reinstall gcc

    - uses: actions/checkout@v3

    - name: Install Ninja
      run: cmake -Dversion="${{ env.ninja_version }}" -Dprefix:PATH=${{ runner.temp }} -P scripts/install_ninja.cmake

    - name: Ninja path (unix)
      if: runner.os == 'Linux' || runner.os == 'macOS'
      run: echo "${{ runner.temp }}" >> $GITHUB_PATH

    - name: Ninja path (Windows)
      if: runner.os == 'Windows'
      run: echo "${{ runner.temp }}" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - name: Install CMake
      run: cmake -Dversion="${{ env.cmake_version }}" -Dprefix:PATH=${{ runner.temp }} -P scripts/install_cmake.cmake

    - name: CMake path (unix)
      if: runner.os == 'Linux' || runner.os == 'macOS'
      run: echo "${{ runner.temp }}/bin" >> $GITHUB_PATH

    - name: CMake path (Windows)
      if: runner.os == 'Windows'
      run: echo "${{ runner.temp }}/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append


    - run: cmake --version

    - run: cmake -G Ninja -B build --install-prefix=${{ runner.temp }}
    - run: cmake --build build
    - run: ctest --test-dir build --preset default
